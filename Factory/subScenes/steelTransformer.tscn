[gd_scene load_steps=6 format=2]

[ext_resource path="res://assets/textures/steelTransformer.png" type="Texture" id=1]
[ext_resource path="res://subScenes/ArrowSprites.tscn" type="PackedScene" id=2]

[sub_resource type="GDScript" id=1]
script/source = "extends RigidBody2D


export(float) var ingotSpeed: float
export(int) var generationSpeed : int
export(int) var coalNeeded : int
export(int) var ironNeeded : int
var id : int
const type : String = \"ironGenerator\"
var orientation: String = \"south\"
const loadedResourceFollowPath2D = preload(\"res://subScenes/PathFollow2DForMaterials.tscn\")
const loadedResource = preload(\"res://subScenes/steelIngot.tscn\")
var pathDone : Vector2
var storedResources = {\"iron\":0,\"coal\":0}

func updatePath():
	pathDone = Vector2(0,0)
	get_node(\"Path2D\").curve.clear_points()
	setPath()
	

#creates tha path for the created object to follow
func setPath():
	addPointToPath(\"Path2D\", Vector2(0,0))
	addPointToPath(\"Path2D\", Vector2(0,1))
	continuePath()
	

func continuePath():
	var nextCellInPath
	var pointToAdd : Vector2
	
	nextCellInPath = global.findCell(pathDone + global.tileMap.world_to_map(self.position))
	if nextCellInPath != null:
		if global.conveyorbeltsList.has(nextCellInPath.type):
			pointToAdd = global.getNextRelativePlaceForPath(nextCellInPath.type)
			addPointToPath(\"Path2D\",pointToAdd)
			continuePath()
	else:
		pass


func _ready():
	get_node(\"Timer\").wait_time = generationSpeed


func addPointToPath(nodePathToAddTo: String,vectorToAdd: Vector2):
	pathDone += vectorToAdd
	get_node(nodePathToAddTo).curve.add_point(global.tileMap.map_to_world(pathDone) + Vector2(64,64))




#usesless funciton ready to delet theoreticly
func ingot_direction(orientation_loc):
	var Vect
	match orientation_loc:
		0: Vect = Vector2(0,-1)
		1: Vect = Vector2(1,0)
		2: Vect = Vector2(0,1)
		3: Vect = Vector2(-1,0)
		
	return Vect


func generateResource():
	var resourceFollowPath2D
	var resource = loadedResource.instance()
	#calls every x frames and creates an ingot
	if global.framesPassedSicnceStarted % generationSpeed == 0:
		resourceFollowPath2D = loadedResourceFollowPath2D.instance()
		resourceFollowPath2D.add_child(resource)
		resourceFollowPath2D.speed = ingotSpeed
		get_node(\"Path2D\").add_child(resourceFollowPath2D)


func _on_Timer_timeout():
	if storedResources.iron >= ironNeeded && storedResources.coal >= coalNeeded:
		generateResource()
		storedResources.iron -= ironNeeded
		storedResources.coal -= coalNeeded



func _on_Area2D_area_entered(area):
	if area.is_in_group(\"ironIngot\"):
		storedResources.iron += 1
	elif area.is_in_group(\"coalIngot\"):
		storedResources.coal +=1
	
	

func orientate(newOrientation: String, pos: Vector2):
	if pos == global.tileMap.world_to_map(self.position):
		self.orientation = newOrientation
		get_tree().call_group(\"arrows\", \"updateOrientation\")
"

[sub_resource type="Curve2D" id=2]
_data = {
"points": PoolVector2Array(  )
}

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 12.8, 64 )

[node name="RigidBody2D" type="RigidBody2D" groups=[
"generators",
"orientableTile",
]]
z_index = 1
collision_layer = 0
collision_mask = 0
mode = 1
mass = 65535.0
gravity_scale = 0.0
script = SubResource( 1 )
ingotSpeed = 1.0
generationSpeed = 1
coalNeeded = 1
ironNeeded = 3

[node name="Path2D" type="Path2D" parent="."]
curve = SubResource( 2 )

[node name="PathFollow2D" type="PathFollow2D" parent="Path2D"]
rotate = false

[node name="Timer" type="Timer" parent="."]
wait_time = 0.082
autostart = true

[node name="Area2D" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
position = Vector2( 64, 64 )
scale = Vector2( 5, 1 )
shape = SubResource( 3 )

[node name="Sprite" type="Sprite" parent="Area2D"]
texture = ExtResource( 1 )
offset = Vector2( 64, 64 )

[node name="CollisionShape2D2" type="CollisionShape2D" parent="."]
position = Vector2( 64, 64 )
scale = Vector2( 5, 1 )
shape = SubResource( 3 )

[node name="ArrowSprites" parent="." instance=ExtResource( 2 )]
[connection signal="timeout" from="Timer" to="." method="_on_Timer_timeout"]
[connection signal="area_entered" from="Area2D" to="." method="_on_Area2D_area_entered"]

[editable path="ArrowSprites"]
